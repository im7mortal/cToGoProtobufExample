// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: params.proto

#include "params.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace exportParams {
class ExportParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExportParams>
      _instance;
} _ExportParams_default_instance_;
}  // namespace exportParams
namespace protobuf_params_2eproto {
static void InitDefaultsExportParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::exportParams::_ExportParams_default_instance_;
    new (ptr) ::exportParams::ExportParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::exportParams::ExportParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExportParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExportParams}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ExportParams.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exportParams::ExportParams, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exportParams::ExportParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exportParams::ExportParams, intval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exportParams::ExportParams, floatval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::exportParams::ExportParams, arrayofdata_),
  0,
  1,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::exportParams::ExportParams)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::exportParams::_ExportParams_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "params.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014params.proto\022\014exportParams\"I\n\014ExportPa"
      "rams\022\016\n\006IntVal\030\001 \001(\005\022\020\n\010FloatVal\030\002 \001(\002\022\027"
      "\n\013ArrayOfData\030\004 \003(\002B\002\020\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 103);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "params.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_params_2eproto
namespace exportParams {

// ===================================================================

void ExportParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExportParams::kIntValFieldNumber;
const int ExportParams::kFloatValFieldNumber;
const int ExportParams::kArrayOfDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExportParams::ExportParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_params_2eproto::scc_info_ExportParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:exportParams.ExportParams)
}
ExportParams::ExportParams(const ExportParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      arrayofdata_(from.arrayofdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&intval_, &from.intval_,
    static_cast<size_t>(reinterpret_cast<char*>(&floatval_) -
    reinterpret_cast<char*>(&intval_)) + sizeof(floatval_));
  // @@protoc_insertion_point(copy_constructor:exportParams.ExportParams)
}

void ExportParams::SharedCtor() {
  ::memset(&intval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&floatval_) -
      reinterpret_cast<char*>(&intval_)) + sizeof(floatval_));
}

ExportParams::~ExportParams() {
  // @@protoc_insertion_point(destructor:exportParams.ExportParams)
  SharedDtor();
}

void ExportParams::SharedDtor() {
}

void ExportParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExportParams::descriptor() {
  ::protobuf_params_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_params_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExportParams& ExportParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_params_2eproto::scc_info_ExportParams.base);
  return *internal_default_instance();
}


void ExportParams::Clear() {
// @@protoc_insertion_point(message_clear_start:exportParams.ExportParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arrayofdata_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&intval_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&floatval_) -
        reinterpret_cast<char*>(&intval_)) + sizeof(floatval_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExportParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:exportParams.ExportParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 IntVal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_intval();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float FloatVal = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_floatval();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &floatval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float ArrayOfData = 4 [packed = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_arrayofdata())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34u, input, this->mutable_arrayofdata())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:exportParams.ExportParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:exportParams.ExportParams)
  return false;
#undef DO_
}

void ExportParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:exportParams.ExportParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 IntVal = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->intval(), output);
  }

  // optional float FloatVal = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->floatval(), output);
  }

  // repeated float ArrayOfData = 4 [packed = true];
  if (this->arrayofdata_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _arrayofdata_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->arrayofdata().data(), this->arrayofdata_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:exportParams.ExportParams)
}

::google::protobuf::uint8* ExportParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:exportParams.ExportParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 IntVal = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->intval(), target);
  }

  // optional float FloatVal = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->floatval(), target);
  }

  // repeated float ArrayOfData = 4 [packed = true];
  if (this->arrayofdata_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _arrayofdata_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->arrayofdata_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:exportParams.ExportParams)
  return target;
}

size_t ExportParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:exportParams.ExportParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated float ArrayOfData = 4 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->arrayofdata_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _arrayofdata_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 IntVal = 1;
    if (has_intval()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->intval());
    }

    // optional float FloatVal = 2;
    if (has_floatval()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExportParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:exportParams.ExportParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ExportParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExportParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:exportParams.ExportParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:exportParams.ExportParams)
    MergeFrom(*source);
  }
}

void ExportParams::MergeFrom(const ExportParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:exportParams.ExportParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arrayofdata_.MergeFrom(from.arrayofdata_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      intval_ = from.intval_;
    }
    if (cached_has_bits & 0x00000002u) {
      floatval_ = from.floatval_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExportParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:exportParams.ExportParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExportParams::CopyFrom(const ExportParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:exportParams.ExportParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExportParams::IsInitialized() const {
  return true;
}

void ExportParams::Swap(ExportParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExportParams::InternalSwap(ExportParams* other) {
  using std::swap;
  arrayofdata_.InternalSwap(&other->arrayofdata_);
  swap(intval_, other->intval_);
  swap(floatval_, other->floatval_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExportParams::GetMetadata() const {
  protobuf_params_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_params_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace exportParams
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::exportParams::ExportParams* Arena::CreateMaybeMessage< ::exportParams::ExportParams >(Arena* arena) {
  return Arena::CreateInternal< ::exportParams::ExportParams >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
